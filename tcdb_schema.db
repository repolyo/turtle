
DROP TABLE tc_profiler.testcase;
CREATE TABLE tc_profiler.testcase (
   tname VARCHAR(255) NOT NULL,   
   tloc VARCHAR(255) NOT NULL,  
   create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   PRIMARY KEY (tloc)
);

DROP TABLE tc_profiler.tags;
CREATE TABLE tc_profiler.tags (
   tag_name VARCHAR(255) NOT NULL,
   create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
   PRIMARY KEY (tag_name)
);

DROP TABLE tc_profiler.func;
CREATE TABLE tc_profiler.func (
   fid INT NOT NULL,
   source_file VARCHAR(255) NOT NULL,
   line_no INT,
   func_name VARCHAR(255) NOT NULL,
   create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
   PRIMARY KEY (fid)
);

CREATE SEQUENCE func_seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER func_trigger BEFORE INSERT ON tc_profiler.func
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  IF :NEW.fid IS NULL THEN
    SELECT func_seq.nextval INTO :NEW.fid FROM dual;
  END IF;
END;
/



DROP TABLE tc_profiler.testcase_func_map;
CREATE TABLE tc_profiler.testcase_func_map (
   tloc VARCHAR(255) NOT NULL, 
   fid INT NOT NULL,
   create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
   FOREIGN KEY (tloc) REFERENCES testcase(tloc),
   FOREIGN KEY (fid) REFERENCES func(fid)
);
